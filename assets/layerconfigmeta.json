[
  {
    "path": [],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Configuration for a single layer"
  },
  {
    "path": [
      "id"
    ],
    "required": true,
    "hints": {
      "group": "basic",
      "question": "What is the identifier of this layer?"
    },
    "type": "string",
    "description": "The id of this layer.\nThis should be a simple, lowercase, human readable string that is used to identify the layer.\n"
  },
  {
    "path": [
      "name"
    ],
    "required": false,
    "hints": {
      "group": "basic",
      "question": "What is the name of this layer?",
      "ifunset": "This will hide the layer in the layer control, making it not filterable and not toggleable"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "Used in the layer control panel to toggle a layer on and of.\n\n"
  },
  {
    "path": [
      "description"
    ],
    "required": false,
    "hints": {
      "group": "basic",
      "question": "How would you describe the features that are shown on this layer?"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A description for the features shown in this layer.\nThis often resembles the introduction of the wiki.osm.org-page for this feature.\n"
  },
  {
    "path": [
      "source"
    ],
    "required": true,
    "hints": {
      "types": "Load data with specific tags from OpenStreetMap ; Load data from an external geojson source ;",
      "group": "basic",
      "question": "Where should the data be fetched from?"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "osmTags": {
            "$ref": "#/definitions/TagConfigJson",
            "description": "question: Which tags must be present on the feature to show it in this layer?\nEvery source must set which tags have to be present in order to load the given layer."
          },
          "maxCacheAge": {
            "description": "question: How long (in seconds) is the data allowed to remain cached until it must be refreshed?\nThe maximum amount of seconds that a tile is allowed to linger in the cache\n\ntype: nat",
            "type": "number"
          }
        },
        "required": [
          "osmTags"
        ]
      },
      {
        "type": "object",
        "properties": {
          "geoJson": {
            "description": "The actual source of the data to load, if loaded via geojson.\n\n# A single geojson-file\nsource: {geoJson: \"https://my.source.net/some-geo-data.geojson\"}\n fetches a geojson from a third party source\n\n# A tiled geojson source\nsource: {geoJson: \"https://my.source.net/some-tile-geojson-{layer}-{z}-{x}-{y}.geojson\", geoJsonZoomLevel: 14}\n to use a tiled geojson source. The web server must offer multiple geojsons. {z}, {x} and {y} are substituted by the location; {layer} is substituted with the id of the loaded layer\n\nSome API's use a BBOX instead of a tile, this can be used by specifying {y_min}, {y_max}, {x_min} and {x_max}",
            "type": "string"
          },
          "geoJsonZoomLevel": {
            "description": "To load a tiled geojson layer, set the zoomlevel of the tiles",
            "type": "number"
          },
          "isOsmCache": {
            "description": "Indicates that the upstream geojson data is OSM-derived.\nUseful for e.g. merging or for scripts generating this cache",
            "type": "boolean"
          },
          "mercatorCrs": {
            "description": "Some API's use a mercator-projection (EPSG:900913) instead of WGS84. Set the flag `mercatorCrs: true`  in the source for this",
            "type": "boolean"
          },
          "idKey": {
            "description": "Some API's have an id-field, but give it a different name.\nSetting this key will rename this field into 'id'",
            "type": "string"
          }
        },
        "required": [
          "geoJson"
        ]
      },
      {
        "enum": [
          "special",
          "special:library"
        ],
        "type": "string"
      }
    ],
    "description": "\nThis determines where the data for the layer is fetched: from OSM or from an external geojson dataset.\n\nIf no 'geojson' is defined, data will be fetched from overpass and the OSM-API.\n\nEvery source _must_ define which tags _must_ be present in order to be picked up.\n\nNote: a source must always be defined. 'special' is only allowed if this is a builtin-layer\n"
  },
  {
    "path": [
      "source",
      "osmTags"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "source",
      "maxCacheAge"
    ],
    "required": false,
    "hints": {
      "typehint": "nat",
      "question": "How long (in seconds) is the data allowed to remain cached until it must be refreshed?"
    },
    "type": "number",
    "description": "The maximum amount of seconds that a tile is allowed to linger in the cache\n"
  },
  {
    "path": [
      "source",
      "geoJson"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "The actual source of the data to load, if loaded via geojson.\n\n# A single geojson-file\nsource: {geoJson: \"https://my.source.net/some-geo-data.geojson\"}\n fetches a geojson from a third party source\n\n# A tiled geojson source\nsource: {geoJson: \"https://my.source.net/some-tile-geojson-{layer}-{z}-{x}-{y}.geojson\", geoJsonZoomLevel: 14}\n to use a tiled geojson source. The web server must offer multiple geojsons. {z}, {x} and {y} are substituted by the location; {layer} is substituted with the id of the loaded layer\n\nSome API's use a BBOX instead of a tile, this can be used by specifying {y_min}, {y_max}, {x_min} and {x_max}"
  },
  {
    "path": [
      "source",
      "geoJsonZoomLevel"
    ],
    "required": false,
    "hints": {},
    "type": "number",
    "description": "To load a tiled geojson layer, set the zoomlevel of the tiles"
  },
  {
    "path": [
      "source",
      "isOsmCache"
    ],
    "required": false,
    "hints": {},
    "type": "boolean",
    "description": "Indicates that the upstream geojson data is OSM-derived.\nUseful for e.g. merging or for scripts generating this cache"
  },
  {
    "path": [
      "source",
      "mercatorCrs"
    ],
    "required": false,
    "hints": {},
    "type": "boolean",
    "description": "Some API's use a mercator-projection (EPSG:900913) instead of WGS84. Set the flag `mercatorCrs: true`  in the source for this"
  },
  {
    "path": [
      "source",
      "idKey"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "Some API's have an id-field, but give it a different name.\nSetting this key will rename this field into 'id'"
  },
  {
    "path": [
      "calculatedTags"
    ],
    "required": false,
    "hints": {
      "group": "advanced"
    },
    "type": "array",
    "description": "A list of extra tags to calculate, specified as \"keyToAssignTo=javascript-expression\".\nThere are a few extra functions available. Refer to <a>Docs/CalculatedTags.md</a> for more information\nThe functions will be run in order, e.g.\n[\n \"_max_overlap_m2=Math.max(...feat.overlapsWith(\"someOtherLayer\").map(o => o.overlap))\n \"_max_overlap_ratio=Number(feat._max_overlap_m2)/feat.area\n]\n\nThe specified tags are evaluated lazily. E.g. if a calculated tag is only used in the popup (e.g. the number of nearby features),\nthe expensive calculation will only be performed then for that feature. This avoids clogging up the contributors PC when all features are loaded.\n\nIf a tag has to be evaluated strictly, use ':=' instead:\n\n[\n\"_some_key:=some_javascript_expression\"\n]\n"
  },
  {
    "path": [
      "doNotDownload"
    ],
    "required": false,
    "hints": {
      "group": "advanced"
    },
    "type": "boolean",
    "description": "If set, this layer will not query overpass; but it'll still match the tags above which are by chance returned by other layers.\nWorks well together with 'passAllFeatures', to add decoration\n"
  },
  {
    "path": [
      "isShown"
    ],
    "required": false,
    "hints": {
      "group": "advanced"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, only features matching this extra tag will be shown.\nThis is useful to hide certain features from view.\n\nThe default value is 'yes'\n"
  },
  {
    "path": [
      "isShown",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "isShown",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "forceLoad"
    ],
    "required": false,
    "hints": {
      "group": "advanced"
    },
    "type": "boolean",
    "description": "Advanced option - might be set by the theme compiler\n\nIf true, this data will _always_ be loaded, even if the theme is disabled\n"
  },
  {
    "path": [
      "minzoom"
    ],
    "required": false,
    "hints": {
      "typehint": "nat",
      "group": "basic",
      "default": "0",
      "question": "At what zoom level should features of the layer be shown?",
      "ifunset": "Always load this layer, even if the entire world is in view."
    },
    "type": "number",
    "description": "The minimum needed zoomlevel required to start loading and displaying the data.\nThis can be used to only show common features (e.g. a bicycle parking) only when the map is zoomed in very much (17).\nThis prevents cluttering the map with thousands of parkings if one is looking to an entire city.\n"
  },
  {
    "path": [
      "shownByDefault"
    ],
    "required": false,
    "hints": {
      "group": "advanced"
    },
    "type": "boolean",
    "description": "Indicates if this layer is shown by default;\ncan be used to hide a layer from start, or to load the layer but only to show it where appropriate (e.g. for snapping to it)\n"
  },
  {
    "path": [
      "minzoomVisible"
    ],
    "required": false,
    "hints": {
      "group": "advanced",
      "default": "100 (thus: always visible"
    },
    "type": "number",
    "description": "The zoom level at which point the data is hidden again\n"
  },
  {
    "path": [
      "title"
    ],
    "required": false,
    "hints": {
      "group": "infobox"
    },
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "The title shown in a popup for elements of this layer.\n"
  },
  {
    "path": [
      "title"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "title",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "title",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "title",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "title",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "title",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "title",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "title",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "title",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "title",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "title",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "title",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "title",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "title",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "title",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "title",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "title",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "title",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "title",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "title",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "titleIcons"
    ],
    "required": false,
    "hints": {
      "typehint": "icon[]",
      "group": "infobox"
    },
    "type": [
      {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/definitions/TagRenderingConfigJson"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      {
        "type": "array",
        "items": [
          {
            "type": "string",
            "enum": [
              "defaults"
            ]
          }
        ],
        "minItems": 1,
        "maxItems": 1
      }
    ],
    "description": "Small icons shown next to the title.\nIf not specified, the OsmLink and wikipedia links will be used by default.\nUse an empty array to hide them.\nNote that \"defaults\" will insert all the default titleIcons (which are added automatically)\n"
  },
  {
    "path": [
      "titleIcons"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "titleIcons",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "titleIcons",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "titleIcons",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "titleIcons",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "titleIcons",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "titleIcons",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "titleIcons",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "titleIcons",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "titleIcons",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "titleIcons",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "titleIcons",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "titleIcons",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "titleIcons",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "titleIcons",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "titleIcons",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "titleIcons",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "titleIcons",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "titleIcons",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "titleIcons",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering"
    ],
    "required": true,
    "hints": {
      "group": "maprendering"
    },
    "type": [
      {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/definitions/default_4"
            },
            {
              "$ref": "#/definitions/default_5"
            },
            {
              "$ref": "#/definitions/default<default|default|default[]|default[]>"
            }
          ]
        }
      },
      {
        "type": "null"
      }
    ],
    "description": "Visualisation of the items on the map\n"
  },
  {
    "path": [
      "mapRendering"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "The PointRenderingConfig gives all details onto how to render a single point of a feature.\n\nThis can be used if:\n\n- The feature is a point\n- To render something at the centroid of an area, or at the start, end or projected centroid of a way"
  },
  {
    "path": [
      "mapRendering",
      "location"
    ],
    "required": true,
    "hints": {},
    "type": "array",
    "description": "All the locations that this point should be rendered at.\nPossible values are:\n- `point`: only renders points at their location\n- `centroid`: show a symbol at the centerpoint of a (multi)Linestring and (multi)polygon. Points will _not_ be rendered with this\n- `projected_centerpoint`: Only on (multi)linestrings: calculate the centerpoint and snap it to the way\n- `start` and `end`: only on linestrings: add a point to the first/last coordinate of the LineString"
  },
  {
    "path": [
      "mapRendering",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "The icon for an element.\nNote that this also doubles as the icon for this layer (rendered with the overpass-tags) ánd the icon in the presets.\n\nThe result of the icon is rendered as follows:\nthe resulting string is interpreted as a _list_ of items, separated by \";\". The bottommost layer is the first layer.\nAs a result, on could use a generic pin, then overlay it with a specific icon.\nTo make things even more practical, one can use all SVG's from the folder \"assets/svg\" and _substitute the color_ in it.\nE.g. to draw a red pin, use \"pin:#f00\", to have a green circle with your icon on top, use `circle:#0f0;<path to my icon.svg>`\n"
  },
  {
    "path": [
      "mapRendering",
      "icon"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "icon",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "icon",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "icon",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "icon",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "icon",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "icon",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "icon",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "icon",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "icon",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "icon",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "icon",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "icon",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "icon",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "icon",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "icon",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "icon",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "icon",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "icon",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "icon",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of extra badges to show next to the icon as small badge\nThey will be added as a 25% height icon at the bottom right of the icon, with all the badges in a flex layout.\n\nNote: strings are interpreted as icons, so layering and substituting is supported. You can use `circle:white;./my_icon.svg` to add a background circle"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "Badge to show"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "then"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "then",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "then",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "then",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "then",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "then",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "then",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "then",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "then",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "then",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "then",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "then",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "then",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "then",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "then",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "then",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "then",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "then",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "then",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "iconBadges",
      "then",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "iconSize"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "A string containing \"width,height\" or \"width,height,anchorpoint\" where anchorpoint is any of 'center', 'top', 'bottom', 'left', 'right', 'bottomleft','topright', ...\nDefault is '40,40,center'"
  },
  {
    "path": [
      "mapRendering",
      "iconSize"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "iconSize",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "iconSize",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "iconSize",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "iconSize",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "iconSize",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "iconSize",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "iconSize",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "iconSize",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "iconSize",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "iconSize",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "iconSize",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "iconSize",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "iconSize",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "iconSize",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "iconSize",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "iconSize",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "iconSize",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "iconSize",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "iconSize",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "anchor"
    ],
    "required": false,
    "hints": {
      "question": "What is the anchorpoint of the icon?"
    },
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "\nThis matches the geographical point with a location on the icon.\nFor example, a feature attached to the ground can use 'bottom' as zooming in will give the appearance of being anchored to a fixed location."
  },
  {
    "path": [
      "mapRendering",
      "anchor"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "anchor",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "anchor",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "anchor",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "anchor",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "anchor",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "anchor",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "anchor",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "anchor",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "anchor",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "anchor",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "anchor",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "anchor",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "anchor",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "anchor",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "anchor",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "anchor",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "anchor",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "anchor",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "anchor",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "rotation"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "The rotation of an icon, useful for e.g. directions.\nUsage: as if it were a css property for 'rotate', thus has to end with 'deg', e.g. `90deg`, `{direction}deg`, `calc(90deg - {camera:direction}deg)``"
  },
  {
    "path": [
      "mapRendering",
      "rotation"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "rotation",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "rotation",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "rotation",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "rotation",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "rotation",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "rotation",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "rotation",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "rotation",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "rotation",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "rotation",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "rotation",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "rotation",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "rotation",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "rotation",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "rotation",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "rotation",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "rotation",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "rotation",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "rotation",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "label"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "A HTML-fragment that is shown below the icon, for example:\n<div style=\"background: white\">{name}</div>\n\nIf the icon is undefined, then the label is shown in the center of the feature.\nNote that, if the wayhandling hides the icon then no label is shown as well."
  },
  {
    "path": [
      "mapRendering",
      "label"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "label",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "label",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "label",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "label",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "label",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "label",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "label",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "label",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "label",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "label",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "label",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "label",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "label",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "label",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "label",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "label",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "label",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "label",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "label",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "css"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "A snippet of css code which is applied onto the container of the entire marker"
  },
  {
    "path": [
      "mapRendering",
      "css"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "css",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "css",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "css",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "css",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "css",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "css",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "css",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "css",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "css",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "css",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "css",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "css",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "css",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "css",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "css",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "css",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "css",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "css",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "css",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "cssClasses"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "A snippet of css-classes which are applied onto the container of the entire marker. They can be space-separated"
  },
  {
    "path": [
      "mapRendering",
      "cssClasses"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "cssClasses",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "cssClasses",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "cssClasses",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "cssClasses",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "cssClasses",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "cssClasses",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "cssClasses",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "cssClasses",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "cssClasses",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "cssClasses",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "cssClasses",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "cssClasses",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "cssClasses",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "cssClasses",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "cssClasses",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "cssClasses",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "cssClasses",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "cssClasses",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "cssClasses",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "labelCss"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "Css that is applied onto the label"
  },
  {
    "path": [
      "mapRendering",
      "labelCss"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "labelCss",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "labelCss",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "labelCss",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "labelCss",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "labelCss",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "labelCss",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "labelCss",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "labelCss",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "labelCss",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "labelCss",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "labelCss",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "labelCss",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "labelCss",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "labelCss",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "labelCss",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "labelCss",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "labelCss",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "labelCss",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "labelCss",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "labelCssClasses"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "Css classes that are applied onto the label; can be space-separated"
  },
  {
    "path": [
      "mapRendering",
      "labelCssClasses"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "labelCssClasses",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "labelCssClasses",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "labelCssClasses",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "labelCssClasses",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "labelCssClasses",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "labelCssClasses",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "labelCssClasses",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "labelCssClasses",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "labelCssClasses",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "labelCssClasses",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "labelCssClasses",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "labelCssClasses",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "labelCssClasses",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "labelCssClasses",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "labelCssClasses",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "labelCssClasses",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "labelCssClasses",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "labelCssClasses",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "labelCssClasses",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "pitchAlignment"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "enum": [
          "canvas",
          "map"
        ],
        "type": "string"
      }
    ],
    "description": "If the map is pitched, the marker will stay parallel to the screen.\nSet to 'map' if you want to put it flattened on the map"
  },
  {
    "path": [
      "mapRendering",
      "pitchAlignment"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "pitchAlignment",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "pitchAlignment",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "pitchAlignment",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "pitchAlignment",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "pitchAlignment",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "pitchAlignment",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "pitchAlignment",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "pitchAlignment",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "pitchAlignment",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "pitchAlignment",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "pitchAlignment",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "pitchAlignment",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "pitchAlignment",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "pitchAlignment",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "pitchAlignment",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "pitchAlignment",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "pitchAlignment",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "pitchAlignment",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "pitchAlignment",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "rotationAlignment"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "enum": [
          "canvas",
          "map"
        ],
        "type": "string"
      }
    ],
    "description": "If the map is rotated, the icon will still point to the north if no rotation was applied"
  },
  {
    "path": [
      "mapRendering",
      "rotationAlignment"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "rotationAlignment",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "rotationAlignment",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "rotationAlignment",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "rotationAlignment",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "rotationAlignment",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "rotationAlignment",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "rotationAlignment",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "rotationAlignment",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "rotationAlignment",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "rotationAlignment",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "rotationAlignment",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "rotationAlignment",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "rotationAlignment",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "rotationAlignment",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "rotationAlignment",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "rotationAlignment",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "rotationAlignment",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "rotationAlignment",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "rotationAlignment",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "The LineRenderingConfig gives all details onto how to render a single line of a feature.\n\nThis can be used if:\n\n- The feature is a line\n- The feature is an area"
  },
  {
    "path": [
      "mapRendering",
      "color"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "The color for way-elements and SVG-elements.\nIf the value starts with \"--\", the style of the body element will be queried for the corresponding variable instead"
  },
  {
    "path": [
      "mapRendering",
      "color"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "color",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "color",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "color",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "color",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "color",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "color",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "color",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "color",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "color",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "color",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "color",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "color",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "color",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "color",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "color",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "color",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "color",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "color",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "color",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "width"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": [
          "string",
          "number"
        ]
      }
    ],
    "description": "The stroke-width for way-elements"
  },
  {
    "path": [
      "mapRendering",
      "width"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "width",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "width",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "width",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "width",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "width",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "width",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "width",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "width",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "width",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "width",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "width",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "width",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "width",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "width",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "width",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "width",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "width",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "width",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "width",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "dashArray"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "A dasharray, e.g. \"5 6\"\nThe dasharray defines 'pixels of line, pixels of gap, pixels of line, pixels of gap',\nDefault value: \"\" (empty string == full line)"
  },
  {
    "path": [
      "mapRendering",
      "dashArray"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "dashArray",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "dashArray",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "dashArray",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "dashArray",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "dashArray",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "dashArray",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "dashArray",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "dashArray",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "dashArray",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "dashArray",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "dashArray",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "dashArray",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "dashArray",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "dashArray",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "dashArray",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "dashArray",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "dashArray",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "dashArray",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "dashArray",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "lineCap"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "The form at the end of a line"
  },
  {
    "path": [
      "mapRendering",
      "lineCap"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "lineCap",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "lineCap",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "lineCap",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "lineCap",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "lineCap",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "lineCap",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "lineCap",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "lineCap",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "lineCap",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "lineCap",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "lineCap",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "lineCap",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "lineCap",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "lineCap",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "lineCap",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "lineCap",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "lineCap",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "lineCap",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "lineCap",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "fillColor"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "The color to fill a polygon with.\nIf undefined, this will be slightly more opaque version of the stroke line.\nUse '#00000000' to make the fill invisible"
  },
  {
    "path": [
      "mapRendering",
      "fillColor"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "fillColor",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "fillColor",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "fillColor",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "fillColor",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "fillColor",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "fillColor",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "fillColor",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "fillColor",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "fillColor",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "fillColor",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "fillColor",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "fillColor",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "fillColor",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "fillColor",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "fillColor",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "fillColor",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "fillColor",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "fillColor",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "fillColor",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "offset"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "number"
      }
    ],
    "description": "The number of pixels this line should be moved.\nUse a positive numbe to move to the right, a negative to move to the left (left/right as defined by the drawing direction of the line).\n\nIMPORTANT: MapComplete will already normalize 'key:both:property' and 'key:both' into the corresponding 'key:left' and 'key:right' tagging (same for 'sidewalk=left/right/both' which is rewritten to 'sidewalk:left' and 'sidewalk:right')\nThis simplifies programming. Refer to the CalculatedTags.md-documentation for more details"
  },
  {
    "path": [
      "mapRendering",
      "offset"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "offset",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "offset",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "offset",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "offset",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "offset",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "offset",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "offset",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "offset",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "offset",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "offset",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "offset",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "offset",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "offset",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "offset",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "offset",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "offset",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "offset",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "offset",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "offset",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Rewrites and multiplies the given renderings of type T.\n\nThis can be used for introducing many similar questions automatically,\nwhich also makes translations easier.\n\n(Note that the key does _not_ need to be wrapped in {}.\nHowever, we recommend to use them if the key is used in a translation, as missing keys will be picked up and warned for by the translation scripts)\n\nFor example:\n\n```\n{\n    rewrite: {\n        sourceString: [\"key\", \"a|b|c\"],\n        into: [\n            [\"X\", 0]\n            [\"Y\", 1],\n            [\"Z\", 2]\n        ],\n        renderings: [{\n            \"key\":\"a|b|c\"\n        }]\n    }\n}\n```\nwill result in _three_ copies (as the values to rewrite into have three values, namely:\n\n[\n  {\n  # The first pair: key --> X, a|b|c --> 0\n      \"X\": 0\n  },\n  {\n      \"Y\": 1\n  },\n  {\n      \"Z\": 2\n  }\n\n]"
  },
  {
    "path": [
      "mapRendering",
      "renderings"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "The PointRenderingConfig gives all details onto how to render a single point of a feature.\n\nThis can be used if:\n\n- The feature is a point\n- To render something at the centroid of an area, or at the start, end or projected centroid of a way"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "location"
    ],
    "required": true,
    "hints": {},
    "type": "array",
    "description": "All the locations that this point should be rendered at.\nPossible values are:\n- `point`: only renders points at their location\n- `centroid`: show a symbol at the centerpoint of a (multi)Linestring and (multi)polygon. Points will _not_ be rendered with this\n- `projected_centerpoint`: Only on (multi)linestrings: calculate the centerpoint and snap it to the way\n- `start` and `end`: only on linestrings: add a point to the first/last coordinate of the LineString"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "The icon for an element.\nNote that this also doubles as the icon for this layer (rendered with the overpass-tags) ánd the icon in the presets.\n\nThe result of the icon is rendered as follows:\nthe resulting string is interpreted as a _list_ of items, separated by \";\". The bottommost layer is the first layer.\nAs a result, on could use a generic pin, then overlay it with a specific icon.\nTo make things even more practical, one can use all SVG's from the folder \"assets/svg\" and _substitute the color_ in it.\nE.g. to draw a red pin, use \"pin:#f00\", to have a green circle with your icon on top, use `circle:#0f0;<path to my icon.svg>`\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of extra badges to show next to the icon as small badge\nThey will be added as a 25% height icon at the bottom right of the icon, with all the badges in a flex layout.\n\nNote: strings are interpreted as icons, so layering and substituting is supported. You can use `circle:white;./my_icon.svg` to add a background circle"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "Badge to show"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "A string containing \"width,height\" or \"width,height,anchorpoint\" where anchorpoint is any of 'center', 'top', 'bottom', 'left', 'right', 'bottomleft','topright', ...\nDefault is '40,40,center'"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor"
    ],
    "required": false,
    "hints": {
      "question": "What is the anchorpoint of the icon?"
    },
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "\nThis matches the geographical point with a location on the icon.\nFor example, a feature attached to the ground can use 'bottom' as zooming in will give the appearance of being anchored to a fixed location."
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "The rotation of an icon, useful for e.g. directions.\nUsage: as if it were a css property for 'rotate', thus has to end with 'deg', e.g. `90deg`, `{direction}deg`, `calc(90deg - {camera:direction}deg)``"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "A HTML-fragment that is shown below the icon, for example:\n<div style=\"background: white\">{name}</div>\n\nIf the icon is undefined, then the label is shown in the center of the feature.\nNote that, if the wayhandling hides the icon then no label is shown as well."
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "A snippet of css code which is applied onto the container of the entire marker"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "A snippet of css-classes which are applied onto the container of the entire marker. They can be space-separated"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "Css that is applied onto the label"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "Css classes that are applied onto the label; can be space-separated"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "enum": [
          "canvas",
          "map"
        ],
        "type": "string"
      }
    ],
    "description": "If the map is pitched, the marker will stay parallel to the screen.\nSet to 'map' if you want to put it flattened on the map"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "enum": [
          "canvas",
          "map"
        ],
        "type": "string"
      }
    ],
    "description": "If the map is rotated, the icon will still point to the north if no rotation was applied"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "The LineRenderingConfig gives all details onto how to render a single line of a feature.\n\nThis can be used if:\n\n- The feature is a line\n- The feature is an area"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "The color for way-elements and SVG-elements.\nIf the value starts with \"--\", the style of the body element will be queried for the corresponding variable instead"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": [
          "string",
          "number"
        ]
      }
    ],
    "description": "The stroke-width for way-elements"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "A dasharray, e.g. \"5 6\"\nThe dasharray defines 'pixels of line, pixels of gap, pixels of line, pixels of gap',\nDefault value: \"\" (empty string == full line)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "The form at the end of a line"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "The color to fill a polygon with.\nIf undefined, this will be slightly more opaque version of the stroke line.\nUse '#00000000' to make the fill invisible"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "number"
      }
    ],
    "description": "The number of pixels this line should be moved.\nUse a positive numbe to move to the right, a negative to move to the left (left/right as defined by the drawing direction of the line).\n\nIMPORTANT: MapComplete will already normalize 'key:both:property' and 'key:both' into the corresponding 'key:left' and 'key:right' tagging (same for 'sidewalk=left/right/both' which is rewritten to 'sidewalk:left' and 'sidewalk:right')\nThis simplifies programming. Refer to the CalculatedTags.md-documentation for more details"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "The LineRenderingConfig gives all details onto how to render a single line of a feature.\n\nThis can be used if:\n\n- The feature is a line\n- The feature is an area"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "The color for way-elements and SVG-elements.\nIf the value starts with \"--\", the style of the body element will be queried for the corresponding variable instead"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "color",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": [
          "string",
          "number"
        ]
      }
    ],
    "description": "The stroke-width for way-elements"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "width",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "A dasharray, e.g. \"5 6\"\nThe dasharray defines 'pixels of line, pixels of gap, pixels of line, pixels of gap',\nDefault value: \"\" (empty string == full line)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "dashArray",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "The form at the end of a line"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "lineCap",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "The color to fill a polygon with.\nIf undefined, this will be slightly more opaque version of the stroke line.\nUse '#00000000' to make the fill invisible"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "fillColor",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "number"
      }
    ],
    "description": "The number of pixels this line should be moved.\nUse a positive numbe to move to the right, a negative to move to the left (left/right as defined by the drawing direction of the line).\n\nIMPORTANT: MapComplete will already normalize 'key:both:property' and 'key:both' into the corresponding 'key:left' and 'key:right' tagging (same for 'sidewalk=left/right/both' which is rewritten to 'sidewalk:left' and 'sidewalk:right')\nThis simplifies programming. Refer to the CalculatedTags.md-documentation for more details"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "offset",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "The PointRenderingConfig gives all details onto how to render a single point of a feature.\n\nThis can be used if:\n\n- The feature is a point\n- To render something at the centroid of an area, or at the start, end or projected centroid of a way"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "location"
    ],
    "required": true,
    "hints": {},
    "type": "array",
    "description": "All the locations that this point should be rendered at.\nPossible values are:\n- `point`: only renders points at their location\n- `centroid`: show a symbol at the centerpoint of a (multi)Linestring and (multi)polygon. Points will _not_ be rendered with this\n- `projected_centerpoint`: Only on (multi)linestrings: calculate the centerpoint and snap it to the way\n- `start` and `end`: only on linestrings: add a point to the first/last coordinate of the LineString"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "The icon for an element.\nNote that this also doubles as the icon for this layer (rendered with the overpass-tags) ánd the icon in the presets.\n\nThe result of the icon is rendered as follows:\nthe resulting string is interpreted as a _list_ of items, separated by \";\". The bottommost layer is the first layer.\nAs a result, on could use a generic pin, then overlay it with a specific icon.\nTo make things even more practical, one can use all SVG's from the folder \"assets/svg\" and _substitute the color_ in it.\nE.g. to draw a red pin, use \"pin:#f00\", to have a green circle with your icon on top, use `circle:#0f0;<path to my icon.svg>`\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "icon",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of extra badges to show next to the icon as small badge\nThey will be added as a 25% height icon at the bottom right of the icon, with all the badges in a flex layout.\n\nNote: strings are interpreted as icons, so layering and substituting is supported. You can use `circle:white;./my_icon.svg` to add a background circle"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "Badge to show"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconBadges",
      "then",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "A string containing \"width,height\" or \"width,height,anchorpoint\" where anchorpoint is any of 'center', 'top', 'bottom', 'left', 'right', 'bottomleft','topright', ...\nDefault is '40,40,center'"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "iconSize",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor"
    ],
    "required": false,
    "hints": {
      "question": "What is the anchorpoint of the icon?"
    },
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "\nThis matches the geographical point with a location on the icon.\nFor example, a feature attached to the ground can use 'bottom' as zooming in will give the appearance of being anchored to a fixed location."
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "anchor",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "The rotation of an icon, useful for e.g. directions.\nUsage: as if it were a css property for 'rotate', thus has to end with 'deg', e.g. `90deg`, `{direction}deg`, `calc(90deg - {camera:direction}deg)``"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotation",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "A HTML-fragment that is shown below the icon, for example:\n<div style=\"background: white\">{name}</div>\n\nIf the icon is undefined, then the label is shown in the center of the feature.\nNote that, if the wayhandling hides the icon then no label is shown as well."
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "label",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "A snippet of css code which is applied onto the container of the entire marker"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "css",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "A snippet of css-classes which are applied onto the container of the entire marker. They can be space-separated"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "cssClasses",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "Css that is applied onto the label"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCss",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ],
    "description": "Css classes that are applied onto the label; can be space-separated"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "labelCssClasses",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "enum": [
          "canvas",
          "map"
        ],
        "type": "string"
      }
    ],
    "description": "If the map is pitched, the marker will stay parallel to the screen.\nSet to 'map' if you want to put it flattened on the map"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "pitchAlignment",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "enum": [
          "canvas",
          "map"
        ],
        "type": "string"
      }
    ],
    "description": "If the map is rotated, the icon will still point to the north if no rotation was applied"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "freeform",
      "key"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the icon"
  },
  {
    "path": [
      "mapRendering",
      "renderings",
      "rotationAlignment",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  },
  {
    "path": [
      "passAllFeatures"
    ],
    "required": false,
    "hints": {
      "group": "advanced"
    },
    "type": "boolean",
    "description": "If set, this layer will pass all the features it receives onto the next layer.\nThis is ideal for decoration, e.g. directions on cameras\n"
  },
  {
    "path": [
      "presets"
    ],
    "required": false,
    "hints": {
      "group": "basic"
    },
    "type": "array",
    "description": "Presets for this layer.\nA preset shows up when clicking the map on a without data (or when right-clicking/long-pressing);\nit will prompt the user to add a new point.\n\nThe most important aspect are the tags, which define which tags the new point will have;\nThe title is shown in the dialog, along with the first sentence of the description.\n\nUpon confirmation, the full description is shown beneath the buttons - perfect to add pictures and examples.\n\nNote: the icon of the preset is determined automatically based on the tags and the icon above. Don't worry about that!\nNB: if no presets are defined, the popup to add new points doesn't show up at all\n"
  },
  {
    "path": [
      "presets",
      "title"
    ],
    "required": true,
    "hints": {
      "question": "What is the word to describe this object?",
      "inline": "Add {value} here"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "The title - shown on the 'add-new'-button.\n\nThis should include the article of the noun, e.g. 'a hydrant', 'a bicycle pump'.\nThis text will be inserted into `Add {category} here`, becoming `Add a hydrant here`.\n\nDo _not_ indicate 'new': 'add a new shop here' is incorrect, as the shop might have existed forever, it could just be unmapped!\n"
  },
  {
    "path": [
      "presets",
      "tags"
    ],
    "required": true,
    "hints": {
      "typehint": "simple_tag",
      "question": "What tag should be added to the new object?"
    },
    "type": "array",
    "description": "A single tag (encoded as <code>key=value</code>) out of all the tags to add onto the newly created point.\nNote that the icon in the UI will be chosen automatically based on the tags provided here.\n"
  },
  {
    "path": [
      "presets",
      "description"
    ],
    "required": false,
    "hints": {
      "question": "How would you describe this feature?"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "An extra explanation of what the feature is, if it is not immediately clear from the title alone.\n\nThe _first sentence_ of the description is shown on the button of the `add` menu.\nThe full description is shown in the confirmation dialog.\n\n(The first sentence is until the first '.'-character in the description)\n"
  },
  {
    "path": [
      "presets",
      "exampleImages"
    ],
    "required": false,
    "hints": {
      "typehint": "image",
      "question": "What is the URL of an image showing such a feature?"
    },
    "type": "array",
    "description": "The URL of an example image which shows a real-life example of what such a feature might look like.\n"
  },
  {
    "path": [
      "presets",
      "snapToLayer"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "If specified, these layers will be shown to and the new point will be snapped towards it"
  },
  {
    "path": [
      "presets",
      "maxSnapDistance"
    ],
    "required": false,
    "hints": {
      "default": "10"
    },
    "type": "number",
    "description": "If specified, a new point will only be snapped if it is within this range.\nDistance in meter\n"
  },
  {
    "path": [
      "tagRenderings"
    ],
    "required": false,
    "hints": {
      "group": "tagrenderings"
    },
    "type": [
      {
        "$ref": "#/definitions/QuestionableTagRenderingConfigJson"
      },
      {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "builtin": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "string"
              }
            ]
          },
          "override": {
            "$ref": "#/definitions/Partial<QuestionableTagRenderingConfigJson>"
          }
        },
        "required": [
          "builtin",
          "override"
        ]
      },
      {
        "allOf": [
          {
            "$ref": "#/definitions/default<(string|QuestionableTagRenderingConfigJson|{builtin:string;override:Partial<QuestionableTagRenderingConfigJson>;})[]>"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ]
          }
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "All the tag renderings.\nA tag rendering is a block that either shows the known value or asks a question.\n\nRefer to the class `TagRenderingConfigJson` to see the possibilities.\n\nNote that we can also use a string here - where the string refers to a tag rendering defined in `assets/questions/questions.json`,\nwhere a few very general questions are defined e.g. website, phone number, ...\nFurthermore, _all_ the questions of another layer can be reused with `otherlayer.*`\nIf you need only a single of the tagRenderings, use `otherlayer.tagrenderingId`\nIf one or more questions have a 'group' or 'label' set, select all the entries with the corresponding group or label with `otherlayer.*group`\nRemark: if a tagRendering is 'lent' from another layer, the 'source'-tags are copied and added as condition.\nIf they are not wanted, remove them with an override\n\nA special value is 'questions', which indicates the location of the questions box. If not specified, it'll be appended to the bottom of the featureInfobox.\n\nAt last, one can define a group of renderings where parts of all strings will be replaced by multiple other strings.\nThis is mainly create questions for a 'left' and a 'right' side of the road.\nThese will be grouped and questions will be asked together\n"
  },
  {
    "path": [
      "tagRenderings"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A QuestionableTagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nIf the desired tags are missing and a question is defined, a question will be shown instead."
  },
  {
    "path": [
      "tagRenderings",
      "question"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If it turns out that this tagRendering doesn't match _any_ value, then we show this question.\nIf undefined, the question is never asked and this tagrendering is read-only"
  },
  {
    "path": [
      "tagRenderings",
      "questionHint"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A hint which is shown in subtle text under the question.\nThis can give some extra information on what the answer should ook like"
  },
  {
    "path": [
      "tagRenderings",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "tagRenderings",
      "freeform",
      "type"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The type of the text-field, e.g. 'string', 'nat', 'float', 'date',...\nSee Docs/SpecialInputElements.md and UI/Input/ValidatedTextField.ts for supported values"
  },
  {
    "path": [
      "tagRenderings",
      "freeform",
      "placeholder"
    ],
    "required": false,
    "hints": {},
    "description": "A (translated) text that is shown (as gray text) within the textfield"
  },
  {
    "path": [
      "tagRenderings",
      "freeform",
      "helperArgs"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Extra parameters to initialize the input helper arguments.\nFor semantics, see the 'SpecialInputElements.md'"
  },
  {
    "path": [
      "tagRenderings",
      "freeform",
      "addExtraTags"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "If a value is added with the textfield, these extra tag is addded.\nUseful to add a 'fixme=freeform textfield used - to be checked'"
  },
  {
    "path": [
      "tagRenderings",
      "freeform",
      "inline"
    ],
    "required": false,
    "hints": {},
    "type": "boolean",
    "description": "When set, influences the way a question is asked.\nInstead of showing a full-width text field, the text field will be shown within the rendering of the question.\n\nThis combines badly with special input elements, as it'll distort the layout.\nNote that this will be set automatically if no special elements are present."
  },
  {
    "path": [
      "tagRenderings",
      "freeform",
      "default"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "default value to enter if no previous tagging is present.\nNormally undefined (aka do not enter anything)"
  },
  {
    "path": [
      "tagRenderings",
      "multiAnswer"
    ],
    "required": false,
    "hints": {},
    "type": "boolean",
    "description": "If true, use checkboxes instead of radio buttons when asking the question"
  },
  {
    "path": [
      "tagRenderings",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "tagRenderings",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "Shown if the 'if is fulfilled"
  },
  {
    "path": [
      "tagRenderings",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the  icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "Size of the image",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An extra icon supporting the choice"
  },
  {
    "path": [
      "tagRenderings",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the  icon"
  },
  {
    "path": [
      "tagRenderings",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "Size of the image"
  },
  {
    "path": [
      "tagRenderings",
      "mappings",
      "hideInAnswer"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": [
          "string",
          "boolean"
        ]
      }
    ],
    "description": "In some cases, multiple taggings exist (e.g. a default assumption, or a commonly mapped abbreviation and a fully written variation).\n\nIn the latter case, a correct text should be shown, but only a single, canonical tagging should be selectable by the user.\nIn this case, one of the mappings can be hiden by setting this flag.\n\nTo demonstrate an example making a default assumption:\n\nmappings: [\n {\n     if: \"access=\", -- no access tag present, we assume accessible\n     then: \"Accessible to the general public\",\n     hideInAnswer: true\n },\n {\n     if: \"access=yes\",\n     then: \"Accessible to the general public\", -- the user selected this, we add that to OSM\n },\n {\n     if: \"access=no\",\n     then: \"Not accessible to the public\"\n }\n]\n\n\nFor example, for an operator, we have `operator=Agentschap Natuur en Bos`, which is often abbreviated to `operator=ANB`.\nThen, we would add two mappings:\n{\n    if: \"operator=Agentschap Natuur en Bos\" -- the non-abbreviated version which should be uploaded\n    then: \"Maintained by Agentschap Natuur en Bos\"\n},\n{\n    if: \"operator=ANB\", -- we don't want to upload abbreviations\n    then: \"Maintained by Agentschap Natuur en Bos\"\n    hideInAnswer: true\n}\n\nHide in answer can also be a tagsfilter, e.g. to make sure an option is only shown when appropriate.\nKeep in mind that this is reverse logic: it will be hidden in the answer if the condition is true, it will thus only show in the case of a mismatch\n\ne.g., for toilets: if \"wheelchair=no\", we know there is no wheelchair dedicated room.\nFor the location of the changing table, the option \"in the wheelchair accessible toilet is weird\", so we write:\n\n{\n    \"question\": \"Where is the changing table located?\"\n    \"mappings\": [\n        {\"if\":\"changing_table:location=female\",\"then\":\"In the female restroom\"},\n       {\"if\":\"changing_table:location=male\",\"then\":\"In the male restroom\"},\n       {\"if\":\"changing_table:location=wheelchair\",\"then\":\"In the wheelchair accessible restroom\", \"hideInAnswer\": \"wheelchair=no\"},\n\n    ]\n}\n\nAlso have a look for the meta-tags\n{\n    if: \"operator=Agentschap Natuur en Bos\",\n    then: \"Maintained by Agentschap Natuur en Bos\",\n    hideInAnswer: \"_country!=be\"\n}"
  },
  {
    "path": [
      "tagRenderings",
      "mappings",
      "hideInAnswer",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "mappings",
      "hideInAnswer",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "mappings",
      "ifnot"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only applicable if 'multiAnswer' is set.\nThis is for situations such as:\n`accepts:coins=no` where one can select all the possible payment methods. However, we want to make explicit that some options _were not_ selected.\nThis can be done with `ifnot`\nNote that we can not explicitly render this negative case to the user, we cannot show `does _not_ accept coins`.\nIf this is important to your usecase, consider using multiple radiobutton-fields without `multiAnswer`"
  },
  {
    "path": [
      "tagRenderings",
      "mappings",
      "ifnot",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "mappings",
      "ifnot",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "mappings",
      "addExtraTags"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "If chosen as answer, these tags will be applied as well onto the object.\nNot compatible with multiAnswer.\n\nThis can be used e.g. to erase other keys which indicate the 'not' value:\n```json\n{\n    \"if\": \"crossing:marking=rainbow\",\n    \"then\": \"This is a rainbow crossing\",\n    \"addExtraTags\": \"not:crossing:marking=\"\n}\n```"
  },
  {
    "path": [
      "tagRenderings",
      "mappings",
      "priorityIf"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the searchable selector is picked, mappings with this item will have priority and show up even if the others are hidden\nUse this sparingly"
  },
  {
    "path": [
      "tagRenderings",
      "mappings",
      "priorityIf",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "mappings",
      "priorityIf",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "mappings",
      "#"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "Used for comments or to disable a validation\n\nignore-image-in-then: normally, a `then`-clause is not allowed to have an `img`-html-element as icons are preferred. In some cases (most notably title-icons), this is allowed"
  },
  {
    "path": [
      "tagRenderings",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "tagRenderings",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "tagRenderings",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "tagRenderings",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "tagRenderings",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "tagRenderings",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "tagRenderings",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "tagRenderings",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "question"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If it turns out that this tagRendering doesn't match _any_ value, then we show this question.\nIf undefined, the question is never asked and this tagrendering is read-only"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "questionHint"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A hint which is shown in subtle text under the question.\nThis can give some extra information on what the answer should ook like"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "freeform",
      "type"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The type of the text-field, e.g. 'string', 'nat', 'float', 'date',...\nSee Docs/SpecialInputElements.md and UI/Input/ValidatedTextField.ts for supported values"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "freeform",
      "placeholder"
    ],
    "required": false,
    "hints": {},
    "description": "A (translated) text that is shown (as gray text) within the textfield"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "freeform",
      "helperArgs"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Extra parameters to initialize the input helper arguments.\nFor semantics, see the 'SpecialInputElements.md'"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "freeform",
      "addExtraTags"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "If a value is added with the textfield, these extra tag is addded.\nUseful to add a 'fixme=freeform textfield used - to be checked'"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "freeform",
      "inline"
    ],
    "required": false,
    "hints": {},
    "type": "boolean",
    "description": "When set, influences the way a question is asked.\nInstead of showing a full-width text field, the text field will be shown within the rendering of the question.\n\nThis combines badly with special input elements, as it'll distort the layout.\nNote that this will be set automatically if no special elements are present."
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "freeform",
      "default"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "default value to enter if no previous tagging is present.\nNormally undefined (aka do not enter anything)"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "multiAnswer"
    ],
    "required": false,
    "hints": {},
    "type": "boolean",
    "description": "If true, use checkboxes instead of radio buttons when asking the question"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "Shown if the 'if is fulfilled"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the  icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "Size of the image",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An extra icon supporting the choice"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the  icon"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "Size of the image"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "mappings",
      "hideInAnswer"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": [
          "string",
          "boolean"
        ]
      }
    ],
    "description": "In some cases, multiple taggings exist (e.g. a default assumption, or a commonly mapped abbreviation and a fully written variation).\n\nIn the latter case, a correct text should be shown, but only a single, canonical tagging should be selectable by the user.\nIn this case, one of the mappings can be hiden by setting this flag.\n\nTo demonstrate an example making a default assumption:\n\nmappings: [\n {\n     if: \"access=\", -- no access tag present, we assume accessible\n     then: \"Accessible to the general public\",\n     hideInAnswer: true\n },\n {\n     if: \"access=yes\",\n     then: \"Accessible to the general public\", -- the user selected this, we add that to OSM\n },\n {\n     if: \"access=no\",\n     then: \"Not accessible to the public\"\n }\n]\n\n\nFor example, for an operator, we have `operator=Agentschap Natuur en Bos`, which is often abbreviated to `operator=ANB`.\nThen, we would add two mappings:\n{\n    if: \"operator=Agentschap Natuur en Bos\" -- the non-abbreviated version which should be uploaded\n    then: \"Maintained by Agentschap Natuur en Bos\"\n},\n{\n    if: \"operator=ANB\", -- we don't want to upload abbreviations\n    then: \"Maintained by Agentschap Natuur en Bos\"\n    hideInAnswer: true\n}\n\nHide in answer can also be a tagsfilter, e.g. to make sure an option is only shown when appropriate.\nKeep in mind that this is reverse logic: it will be hidden in the answer if the condition is true, it will thus only show in the case of a mismatch\n\ne.g., for toilets: if \"wheelchair=no\", we know there is no wheelchair dedicated room.\nFor the location of the changing table, the option \"in the wheelchair accessible toilet is weird\", so we write:\n\n{\n    \"question\": \"Where is the changing table located?\"\n    \"mappings\": [\n        {\"if\":\"changing_table:location=female\",\"then\":\"In the female restroom\"},\n       {\"if\":\"changing_table:location=male\",\"then\":\"In the male restroom\"},\n       {\"if\":\"changing_table:location=wheelchair\",\"then\":\"In the wheelchair accessible restroom\", \"hideInAnswer\": \"wheelchair=no\"},\n\n    ]\n}\n\nAlso have a look for the meta-tags\n{\n    if: \"operator=Agentschap Natuur en Bos\",\n    then: \"Maintained by Agentschap Natuur en Bos\",\n    hideInAnswer: \"_country!=be\"\n}"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "mappings",
      "hideInAnswer",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "mappings",
      "hideInAnswer",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "mappings",
      "ifnot"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only applicable if 'multiAnswer' is set.\nThis is for situations such as:\n`accepts:coins=no` where one can select all the possible payment methods. However, we want to make explicit that some options _were not_ selected.\nThis can be done with `ifnot`\nNote that we can not explicitly render this negative case to the user, we cannot show `does _not_ accept coins`.\nIf this is important to your usecase, consider using multiple radiobutton-fields without `multiAnswer`"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "mappings",
      "ifnot",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "mappings",
      "ifnot",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "mappings",
      "addExtraTags"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "If chosen as answer, these tags will be applied as well onto the object.\nNot compatible with multiAnswer.\n\nThis can be used e.g. to erase other keys which indicate the 'not' value:\n```json\n{\n    \"if\": \"crossing:marking=rainbow\",\n    \"then\": \"This is a rainbow crossing\",\n    \"addExtraTags\": \"not:crossing:marking=\"\n}\n```"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "mappings",
      "priorityIf"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the searchable selector is picked, mappings with this item will have priority and show up even if the others are hidden\nUse this sparingly"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "mappings",
      "priorityIf",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "mappings",
      "priorityIf",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "mappings",
      "#"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "Used for comments or to disable a validation\n\nignore-image-in-then: normally, a `then`-clause is not allowed to have an `img`-html-element as icons are preferred. In some cases (most notably title-icons), this is allowed"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "override",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Rewrites and multiplies the given renderings of type T.\n\nThis can be used for introducing many similar questions automatically,\nwhich also makes translations easier.\n\n(Note that the key does _not_ need to be wrapped in {}.\nHowever, we recommend to use them if the key is used in a translation, as missing keys will be picked up and warned for by the translation scripts)\n\nFor example:\n\n```\n{\n    rewrite: {\n        sourceString: [\"key\", \"a|b|c\"],\n        into: [\n            [\"X\", 0]\n            [\"Y\", 1],\n            [\"Z\", 2]\n        ],\n        renderings: [{\n            \"key\":\"a|b|c\"\n        }]\n    }\n}\n```\nwill result in _three_ copies (as the values to rewrite into have three values, namely:\n\n[\n  {\n  # The first pair: key --> X, a|b|c --> 0\n      \"X\": 0\n  },\n  {\n      \"Y\": 1\n  },\n  {\n      \"Z\": 2\n  }\n\n]"
  },
  {
    "path": [
      "tagRenderings",
      "renderings"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "A QuestionableTagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nIf the desired tags are missing and a question is defined, a question will be shown instead."
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "question"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If it turns out that this tagRendering doesn't match _any_ value, then we show this question.\nIf undefined, the question is never asked and this tagrendering is read-only"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "questionHint"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A hint which is shown in subtle text under the question.\nThis can give some extra information on what the answer should ook like"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "freeform",
      "type"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The type of the text-field, e.g. 'string', 'nat', 'float', 'date',...\nSee Docs/SpecialInputElements.md and UI/Input/ValidatedTextField.ts for supported values"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "freeform",
      "placeholder"
    ],
    "required": false,
    "hints": {},
    "description": "A (translated) text that is shown (as gray text) within the textfield"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "freeform",
      "helperArgs"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Extra parameters to initialize the input helper arguments.\nFor semantics, see the 'SpecialInputElements.md'"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "freeform",
      "addExtraTags"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "If a value is added with the textfield, these extra tag is addded.\nUseful to add a 'fixme=freeform textfield used - to be checked'"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "freeform",
      "inline"
    ],
    "required": false,
    "hints": {},
    "type": "boolean",
    "description": "When set, influences the way a question is asked.\nInstead of showing a full-width text field, the text field will be shown within the rendering of the question.\n\nThis combines badly with special input elements, as it'll distort the layout.\nNote that this will be set automatically if no special elements are present."
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "freeform",
      "default"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "default value to enter if no previous tagging is present.\nNormally undefined (aka do not enter anything)"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "multiAnswer"
    ],
    "required": false,
    "hints": {},
    "type": "boolean",
    "description": "If true, use checkboxes instead of radio buttons when asking the question"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "Shown if the 'if is fulfilled"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the  icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "Size of the image",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An extra icon supporting the choice"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the  icon"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "Size of the image"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "mappings",
      "hideInAnswer"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": [
          "string",
          "boolean"
        ]
      }
    ],
    "description": "In some cases, multiple taggings exist (e.g. a default assumption, or a commonly mapped abbreviation and a fully written variation).\n\nIn the latter case, a correct text should be shown, but only a single, canonical tagging should be selectable by the user.\nIn this case, one of the mappings can be hiden by setting this flag.\n\nTo demonstrate an example making a default assumption:\n\nmappings: [\n {\n     if: \"access=\", -- no access tag present, we assume accessible\n     then: \"Accessible to the general public\",\n     hideInAnswer: true\n },\n {\n     if: \"access=yes\",\n     then: \"Accessible to the general public\", -- the user selected this, we add that to OSM\n },\n {\n     if: \"access=no\",\n     then: \"Not accessible to the public\"\n }\n]\n\n\nFor example, for an operator, we have `operator=Agentschap Natuur en Bos`, which is often abbreviated to `operator=ANB`.\nThen, we would add two mappings:\n{\n    if: \"operator=Agentschap Natuur en Bos\" -- the non-abbreviated version which should be uploaded\n    then: \"Maintained by Agentschap Natuur en Bos\"\n},\n{\n    if: \"operator=ANB\", -- we don't want to upload abbreviations\n    then: \"Maintained by Agentschap Natuur en Bos\"\n    hideInAnswer: true\n}\n\nHide in answer can also be a tagsfilter, e.g. to make sure an option is only shown when appropriate.\nKeep in mind that this is reverse logic: it will be hidden in the answer if the condition is true, it will thus only show in the case of a mismatch\n\ne.g., for toilets: if \"wheelchair=no\", we know there is no wheelchair dedicated room.\nFor the location of the changing table, the option \"in the wheelchair accessible toilet is weird\", so we write:\n\n{\n    \"question\": \"Where is the changing table located?\"\n    \"mappings\": [\n        {\"if\":\"changing_table:location=female\",\"then\":\"In the female restroom\"},\n       {\"if\":\"changing_table:location=male\",\"then\":\"In the male restroom\"},\n       {\"if\":\"changing_table:location=wheelchair\",\"then\":\"In the wheelchair accessible restroom\", \"hideInAnswer\": \"wheelchair=no\"},\n\n    ]\n}\n\nAlso have a look for the meta-tags\n{\n    if: \"operator=Agentschap Natuur en Bos\",\n    then: \"Maintained by Agentschap Natuur en Bos\",\n    hideInAnswer: \"_country!=be\"\n}"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "mappings",
      "hideInAnswer",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "mappings",
      "hideInAnswer",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "mappings",
      "ifnot"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only applicable if 'multiAnswer' is set.\nThis is for situations such as:\n`accepts:coins=no` where one can select all the possible payment methods. However, we want to make explicit that some options _were not_ selected.\nThis can be done with `ifnot`\nNote that we can not explicitly render this negative case to the user, we cannot show `does _not_ accept coins`.\nIf this is important to your usecase, consider using multiple radiobutton-fields without `multiAnswer`"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "mappings",
      "ifnot",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "mappings",
      "ifnot",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "mappings",
      "addExtraTags"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "If chosen as answer, these tags will be applied as well onto the object.\nNot compatible with multiAnswer.\n\nThis can be used e.g. to erase other keys which indicate the 'not' value:\n```json\n{\n    \"if\": \"crossing:marking=rainbow\",\n    \"then\": \"This is a rainbow crossing\",\n    \"addExtraTags\": \"not:crossing:marking=\"\n}\n```"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "mappings",
      "priorityIf"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the searchable selector is picked, mappings with this item will have priority and show up even if the others are hidden\nUse this sparingly"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "mappings",
      "priorityIf",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "mappings",
      "priorityIf",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "mappings",
      "#"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "Used for comments or to disable a validation\n\nignore-image-in-then: normally, a `then`-clause is not allowed to have an `img`-html-element as icons are preferred. In some cases (most notably title-icons), this is allowed"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "question"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "If it turns out that this tagRendering doesn't match _any_ value, then we show this question.\nIf undefined, the question is never asked and this tagrendering is read-only"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "questionHint"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A hint which is shown in subtle text under the question.\nThis can give some extra information on what the answer should ook like"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "freeform"
    ],
    "required": false,
    "hints": {},
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "freeform",
      "type"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The type of the text-field, e.g. 'string', 'nat', 'float', 'date',...\nSee Docs/SpecialInputElements.md and UI/Input/ValidatedTextField.ts for supported values"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "freeform",
      "placeholder"
    ],
    "required": false,
    "hints": {},
    "description": "A (translated) text that is shown (as gray text) within the textfield"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "freeform",
      "helperArgs"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Extra parameters to initialize the input helper arguments.\nFor semantics, see the 'SpecialInputElements.md'"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "freeform",
      "addExtraTags"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "If a value is added with the textfield, these extra tag is addded.\nUseful to add a 'fixme=freeform textfield used - to be checked'"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "freeform",
      "inline"
    ],
    "required": false,
    "hints": {},
    "type": "boolean",
    "description": "When set, influences the way a question is asked.\nInstead of showing a full-width text field, the text field will be shown within the rendering of the question.\n\nThis combines badly with special input elements, as it'll distort the layout.\nNote that this will be set automatically if no special elements are present."
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "freeform",
      "default"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "default value to enter if no previous tagging is present.\nNormally undefined (aka do not enter anything)"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "multiAnswer"
    ],
    "required": false,
    "hints": {},
    "type": "boolean",
    "description": "If true, use checkboxes instead of radio buttons when asking the question"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "mappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "mappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "mappings",
      "then"
    ],
    "required": true,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "Shown if the 'if is fulfilled"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "mappings",
      "icon"
    ],
    "required": false,
    "hints": {
      "typehint": "icon"
    },
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the  icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "Size of the image",
            "type": "string"
          }
        },
        "required": [
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An extra icon supporting the choice"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "mappings",
      "icon",
      "path"
    ],
    "required": true,
    "hints": {
      "typehint": "icon"
    },
    "type": "string",
    "description": "The path to the  icon"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "mappings",
      "icon",
      "class"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "Size of the image"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "mappings",
      "hideInAnswer"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": [
          "string",
          "boolean"
        ]
      }
    ],
    "description": "In some cases, multiple taggings exist (e.g. a default assumption, or a commonly mapped abbreviation and a fully written variation).\n\nIn the latter case, a correct text should be shown, but only a single, canonical tagging should be selectable by the user.\nIn this case, one of the mappings can be hiden by setting this flag.\n\nTo demonstrate an example making a default assumption:\n\nmappings: [\n {\n     if: \"access=\", -- no access tag present, we assume accessible\n     then: \"Accessible to the general public\",\n     hideInAnswer: true\n },\n {\n     if: \"access=yes\",\n     then: \"Accessible to the general public\", -- the user selected this, we add that to OSM\n },\n {\n     if: \"access=no\",\n     then: \"Not accessible to the public\"\n }\n]\n\n\nFor example, for an operator, we have `operator=Agentschap Natuur en Bos`, which is often abbreviated to `operator=ANB`.\nThen, we would add two mappings:\n{\n    if: \"operator=Agentschap Natuur en Bos\" -- the non-abbreviated version which should be uploaded\n    then: \"Maintained by Agentschap Natuur en Bos\"\n},\n{\n    if: \"operator=ANB\", -- we don't want to upload abbreviations\n    then: \"Maintained by Agentschap Natuur en Bos\"\n    hideInAnswer: true\n}\n\nHide in answer can also be a tagsfilter, e.g. to make sure an option is only shown when appropriate.\nKeep in mind that this is reverse logic: it will be hidden in the answer if the condition is true, it will thus only show in the case of a mismatch\n\ne.g., for toilets: if \"wheelchair=no\", we know there is no wheelchair dedicated room.\nFor the location of the changing table, the option \"in the wheelchair accessible toilet is weird\", so we write:\n\n{\n    \"question\": \"Where is the changing table located?\"\n    \"mappings\": [\n        {\"if\":\"changing_table:location=female\",\"then\":\"In the female restroom\"},\n       {\"if\":\"changing_table:location=male\",\"then\":\"In the male restroom\"},\n       {\"if\":\"changing_table:location=wheelchair\",\"then\":\"In the wheelchair accessible restroom\", \"hideInAnswer\": \"wheelchair=no\"},\n\n    ]\n}\n\nAlso have a look for the meta-tags\n{\n    if: \"operator=Agentschap Natuur en Bos\",\n    then: \"Maintained by Agentschap Natuur en Bos\",\n    hideInAnswer: \"_country!=be\"\n}"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "mappings",
      "hideInAnswer",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "mappings",
      "hideInAnswer",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "mappings",
      "ifnot"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only applicable if 'multiAnswer' is set.\nThis is for situations such as:\n`accepts:coins=no` where one can select all the possible payment methods. However, we want to make explicit that some options _were not_ selected.\nThis can be done with `ifnot`\nNote that we can not explicitly render this negative case to the user, we cannot show `does _not_ accept coins`.\nIf this is important to your usecase, consider using multiple radiobutton-fields without `multiAnswer`"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "mappings",
      "ifnot",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "mappings",
      "ifnot",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "mappings",
      "addExtraTags"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "If chosen as answer, these tags will be applied as well onto the object.\nNot compatible with multiAnswer.\n\nThis can be used e.g. to erase other keys which indicate the 'not' value:\n```json\n{\n    \"if\": \"crossing:marking=rainbow\",\n    \"then\": \"This is a rainbow crossing\",\n    \"addExtraTags\": \"not:crossing:marking=\"\n}\n```"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "mappings",
      "priorityIf"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If the searchable selector is picked, mappings with this item will have priority and show up even if the others are hidden\nUse this sparingly"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "mappings",
      "priorityIf",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "mappings",
      "priorityIf",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "mappings",
      "#"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "Used for comments or to disable a validation\n\nignore-image-in-then: normally, a `then`-clause is not allowed to have an `img`-html-element as icons are preferred. In some cases (most notably title-icons), this is allowed"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "id"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "labels"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "classes"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ],
    "description": "A list of css-classes to apply to the entire tagRendering if the answer is known (not applied on the question).\nThis is only for advanced users"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "description"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "A human-readable text explaining what this tagRendering does.\nMostly used for the shared tagrenderings"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "render"
    ],
    "required": false,
    "hints": {
      "typehint": "rendered"
    },
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "object",
        "properties": {
          "special": {
            "allOf": [
              {
                "$ref": "#/definitions/Record<string,string|Record<string,string>>"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              }
            ]
          }
        },
        "required": [
          "special"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "condition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or ask the question) if the selected object also matches the tags specified as `condition`.\n\nThis is useful to ask a follow-up question.\nFor example, within toilets, asking _where_ the diaper changing table is is only useful _if_ there is one.\nThis can be done by adding `\"condition\": \"changing_table=yes\"`\n\nA full example would be:\n```json\n    {\n      \"question\": \"Where is the changing table located?\",\n      \"render\": \"The changing table is located at {changing_table:location}\",\n      \"condition\": \"changing_table=yes\",\n      \"freeform\": {\n        \"key\": \"changing_table:location\",\n        \"inline\": true\n      },\n      \"mappings\": [\n        {\n          \"then\": \"The changing table is in the toilet for women.\",\n          \"if\": \"changing_table:location=female_toilet\"\n        },\n        {\n          \"then\": \"The changing table is in the toilet for men.\",\n          \"if\": \"changing_table:location=male_toilet\"\n        },\n        {\n          \"if\": \"changing_table:location=wheelchair_toilet\",\n          \"then\": \"The changing table is in the toilet for wheelchair users.\",\n        },\n        {\n          \"if\": \"changing_table:location=dedicated_room\",\n          \"then\": \"The changing table is in a dedicated room. \",\n        }\n      ],\n      \"id\": \"toilet-changing_table:location\"\n    },\n```"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "condition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "condition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "metacondition"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "If set, this tag will be evaluated agains the _usersettings/application state_ table.\nEnable 'show debug info' in user settings to see available options.\nNote that values with an underscore depicts _application state_ (including metainfo about the user) whereas values without an underscore depict _user settings_"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "metacondition",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "tagRenderings",
      "renderings",
      "override",
      "metacondition",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "filter"
    ],
    "required": false,
    "hints": {
      "group": "filters"
    },
    "type": [
      {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/definitions/default_1"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      {
        "type": "object",
        "properties": {
          "sameAs": {
            "type": "string"
          }
        },
        "required": [
          "sameAs"
        ]
      }
    ],
    "description": "All the extra questions for filtering.\nIf a string is given, mapComplete will search in 'filters.json' for the appropriate filter or will try to parse it as `layername.filterid` and us that one\n"
  },
  {
    "path": [
      "filter",
      "id"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "An id/name for this filter, used to set the URL parameters"
  },
  {
    "path": [
      "filter",
      "options"
    ],
    "required": true,
    "hints": {},
    "type": "array",
    "description": "The options for a filter\nIf there are multiple options these will be a list of radio buttons\nIf there is only one option this will be a checkbox\nFiltering is done based on the given osmTags that are compared to the objects in that layer.\n\nAn example which searches by name:\n\n```\n{\n      \"id\": \"shop-name\",\n      \"options\": [\n        {\n          \"fields\": [\n            {\n              \"name\": \"search\",\n              \"type\": \"string\"\n            }\n          ],\n          \"osmTags\": \"name~i~.*{search}.*\",\n          \"question\": {\n            \"en\": \"Only show shops with name {search}\",\n          }\n        }\n      ]\n    }\n    ```"
  },
  {
    "path": [
      "filter",
      "options",
      "osmTags"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "filter",
      "options",
      "osmTags",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "filter",
      "options",
      "osmTags",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "filter",
      "options",
      "fields",
      "name"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "If name is `search`, use  \"_first_comment~.*{search}.*\" as osmTags"
  },
  {
    "path": [
      "filter",
      "#"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "Used for comments or to disable a check\n\n\"ignore-possible-duplicate\": disables a check in `DetectDuplicateFilters` which complains that a filter can be replaced by a filter from the `filters`-library-layer"
  },
  {
    "path": [
      "deletion"
    ],
    "required": false,
    "hints": {
      "group": "editing"
    },
    "type": [
      {
        "$ref": "#/definitions/DeleteConfigJson"
      },
      {
        "type": "boolean"
      }
    ],
    "description": "This block defines under what circumstances the delete dialog is shown for objects of this layer.\nIf set, a dialog is shown to the user to (soft) delete the point.\nThe dialog is built to be user friendly and to prevent mistakes.\nIf deletion is not possible, the dialog will hide itself and show the reason of non-deletability instead.\n\nTo configure, the following values are possible:\n\n- false: never ever show the delete button\n- true: show the default delete button\n- undefined: use the mapcomplete default to show deletion or not. Currently, this is the same as 'false' but this will change in the future\n- or: a hash with options (see below)\n\n The delete dialog\n =================\n\n\n\n#### Hard deletion if enough experience\n\nA feature can only be deleted from OpenStreetMap by mapcomplete if:\n\n- It is a node\n- No ways or relations use the node\n- The logged-in user has enough experience OR the user is the only one to have edited the point previously\n- The logged-in user has no unread messages (or has a ton of experience)\n- The user did not select one of the 'non-delete-options' (see below)\n\nIn all other cases, a 'soft deletion' is used.\n\n#### Soft deletion\n\nA 'soft deletion' is when the point isn't deleted from OSM but retagged so that it'll won't how up in the mapcomplete theme anymore.\nThis makes it look like it was deleted, without doing damage. A fixme will be added to the point.\n\nNote that a soft deletion is _only_ possible if these tags are provided by the theme creator, as they'll be different for every theme\n\n#### No-delete options\n\nIn some cases, the contributor might want to delete something for the wrong reason (e.g. someone who wants to have a path removed \"because the path is on their private property\").\nHowever, the path exists in reality and should thus be on OSM - otherwise the next contributor will pass by and notice \"hey, there is a path missing here! Let me redraw it in OSM!)\n\nThe correct approach is to retag the feature in such a way that it is semantically correct *and* that it doesn't show up on the theme anymore.\nA no-delete option is offered as 'reason to delete it', but secretly retags.\n"
  },
  {
    "path": [
      "deletion",
      "extraDeleteReasons"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "*\nBy default, three reasons to delete a point are shown:\n\n- The point does not exist anymore\n- The point was a testing point\n- THe point could not be found\n\nHowever, for some layers, there might be different or more specific reasons for deletion which can be user friendly to set, e.g.:\n\n- the shop has closed\n- the climbing route has been closed of for nature conservation reasons\n- ...\n\nThese reasons can be stated here and will be shown in the list of options the user can choose from"
  },
  {
    "path": [
      "deletion",
      "extraDeleteReasons",
      "explanation"
    ],
    "required": true,
    "hints": {},
    "description": "The text that will be shown to the user - translatable"
  },
  {
    "path": [
      "deletion",
      "extraDeleteReasons",
      "changesetMessage"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "The text that will be uploaded into the changeset or will be used in the fixme in case of a soft deletion\nShould be a few words, in english"
  },
  {
    "path": [
      "deletion",
      "nonDeleteMappings"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "In some cases, a (starting) contributor might wish to delete a feature even though deletion is not appropriate.\n(The most relevant case are small paths running over private property. These should be marked as 'private' instead of deleted, as the community might trace the path again from aerial imagery, gettting us back to the original situation).\n\nBy adding a 'nonDeleteMapping', an option can be added into the list which will retag the feature.\nIt is important that the feature will be retagged in such a way that it won't be picked up by the layer anymore!"
  },
  {
    "path": [
      "deletion",
      "nonDeleteMappings",
      "if"
    ],
    "required": true,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "deletion",
      "nonDeleteMappings",
      "then"
    ],
    "required": true,
    "hints": {},
    "description": "The human explanation for the options"
  },
  {
    "path": [
      "deletion",
      "softDeletionTags"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "$ref": "#/definitions/{or:TagConfigJson[];}"
      },
      {
        "type": "string"
      }
    ],
    "description": "In some cases, the contributor is not allowed to delete the current feature (e.g. because it isn't a point, the point is referenced by a relation or the user isn't experienced enough).\nTo still offer the user a 'delete'-option, the feature is retagged with these tags. This is a soft deletion, as the point isn't actually removed from OSM but rather marked as 'disused'\nIt is important that the feature will be retagged in such a way that it won't be picked up by the layer anymore!\n\nExample (note that \"amenity=\" erases the 'amenity'-key alltogether):\n```\n{\n    \"and\": [\"disussed:amenity=public_bookcase\", \"amenity=\"]\n}\n```\n\nor (notice the use of the ':='-tag to copy the old value of 'shop=*' into 'disused:shop='):\n```\n{\n    \"and\": [\"disused:shop:={shop}\", \"shop=\"]\n}\n```"
  },
  {
    "path": [
      "deletion",
      "softDeletionTags",
      "and"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "deletion",
      "softDeletionTags",
      "or"
    ],
    "required": false,
    "hints": {
      "typehint": "tag"
    },
    "type": [
      {
        "$ref": "#/definitions/{and:TagConfigJson[];}"
      },
      {
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation\n"
  },
  {
    "path": [
      "deletion",
      "neededChangesets"
    ],
    "required": false,
    "hints": {},
    "type": "number",
    "description": "*\nBy default, the contributor needs 20 previous changesets to delete points edited by others.\nFor some small features (e.g. bicycle racks) this is too much and this requirement can be lowered or dropped, which can be done here."
  },
  {
    "path": [
      "deletion",
      "omitDefaultDeleteReasons"
    ],
    "required": false,
    "hints": {},
    "type": "boolean",
    "description": "Set this flag if the default delete reasons should be omitted from the dialog.\nThis requires at least one extraDeleteReason or nonDeleteMapping"
  },
  {
    "path": [
      "allowMove"
    ],
    "required": false,
    "hints": {
      "group": "editing"
    },
    "type": [
      {
        "$ref": "#/definitions/default_3"
      },
      {
        "type": "boolean"
      }
    ],
    "description": "Indicates if a point can be moved and configures the modalities.\n\nA feature can be moved by MapComplete if:\n\n- It is a point\n- The point is _not_ part of a way or a a relation.\n\nOff by default. Can be enabled by setting this flag or by configuring.\n"
  },
  {
    "path": [
      "allowMove",
      "enableImproveAccuracy"
    ],
    "required": false,
    "hints": {},
    "type": "boolean",
    "description": "One default reason to move a point is to improve accuracy.\nSet to false to disable this reason"
  },
  {
    "path": [
      "allowMove",
      "enableRelocation"
    ],
    "required": false,
    "hints": {},
    "type": "boolean",
    "description": "One default reason to move a point is because it has relocated\nSet to false to disable this reason"
  },
  {
    "path": [
      "allowSplit"
    ],
    "required": false,
    "hints": {
      "group": "editing"
    },
    "type": "boolean",
    "description": "If set, a 'split this way' button is shown on objects rendered as LineStrings, e.g. highways.\n\nIf the way is part of a relation, MapComplete will attempt to update this relation as well\n"
  },
  {
    "path": [
      "units"
    ],
    "required": false,
    "hints": {
      "default": "ult: true,"
    },
    "type": "object",
    "description": "In some cases, a value is represented in a certain unit (such as meters for heigt/distance/..., km/h for speed, ...)\n\nSometimes, multiple denominations are possible (e.g. km/h vs mile/h; megawatt vs kilowatt vs gigawatt for power generators, ...)\n\nThis brings in some troubles, as there are multiple ways to write it (no denomitation, 'm' vs 'meter' 'metre', ...)\n\nNot only do we want to write consistent data to OSM, we also want to present this consistently to the user.\nThis is handled by defining units.\n\n# Rendering\n\nTo render a value with long (human) denomination, use {canonical(key)}\n\n# Usage\n\nFirst of all, you define which keys have units applied, for example:\n\n```\nunits: [\n appliesTo: [\"maxspeed\", \"maxspeed:hgv\", \"maxspeed:bus\"]\n applicableUnits: [\n     ...\n ]\n]\n```\n\nApplicableUnits defines which is the canonical extension, how it is presented to the user, ...:\n\n```\napplicableUnits: [\n{\n    canonicalDenomination: \"km/h\",\n    alternativeDenomination: [\"km/u\", \"kmh\", \"kph\"]\n    human: {\n        en: \"kilometer/hour\",\n        nl: \"kilometer/uur\"\n    },\n    humanShort: {\n        en: \"km/h\",\n        nl: \"km/u\"\n    }\n},\n{\n    canoncialDenomination: \"mph\",\n    ... similar for miles an hour ...\n}\n]\n```\n\n\nIf this is defined, then every key which the denominations apply to (`maxspeed`, `maxspeed:hgv` and `maxspeed:bus`) will be rewritten at the metatagging stage:\nevery value will be parsed and the canonical extension will be added add presented to the other parts of the code.\n\nAlso, if a freeform text field is used, an extra dropdown with applicable denominations will be given"
  },
  {
    "path": [
      "units",
      "appliesToKey"
    ],
    "required": true,
    "hints": {},
    "type": "array",
    "description": "Every key from this list will be normalized.\n\nTo render the value properly (with a human readable denomination), use `{canonical(<key>)}`"
  },
  {
    "path": [
      "units",
      "eraseInvalidValues"
    ],
    "required": false,
    "hints": {},
    "type": "boolean",
    "description": "If set, invalid values will be erased in the MC application (but not in OSM of course!)\nBe careful with setting this"
  },
  {
    "path": [
      "units",
      "applicableUnits"
    ],
    "required": true,
    "hints": {},
    "type": "array",
    "description": "The possible denominations for this unit.\nFor length, denominations could be \"meter\", \"kilometer\", \"miles\", \"foot\""
  },
  {
    "path": [
      "units",
      "applicableUnits",
      "useIfNoUnitGiven"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "boolean"
      }
    ],
    "description": "If this evaluates to true and the value to interpret has _no_ unit given, assumes that this unit is meant.\nAlternatively, a list of country codes can be given where this acts as the default interpretation\n\nE.g., a denomination using \"meter\" would probably set this flag to \"true\";\na denomination for \"mp/h\" will use the condition \"_country=gb\" to indicate that it is the default in the UK.\n\nIf none of the units indicate that they are the default, the first denomination will be used instead"
  },
  {
    "path": [
      "units",
      "applicableUnits",
      "canonicalDenomination"
    ],
    "required": true,
    "hints": {},
    "type": "string",
    "description": "The canonical value for this denomination which will be added to the value in OSM.\ne.g. \"m\" for meters\nIf the user inputs '42', the canonical value will be added and it'll become '42m'.\n\nImportant: often, _no_ canonical values are expected, e.g. in the case of 'maxspeed' where 'km/h' is the default.\nIn this case, an empty string should be used"
  },
  {
    "path": [
      "units",
      "applicableUnits",
      "canonicalDenominationSingular"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "The canonical denomination in the case that the unit is precisely '1'.\nUsed for display purposes only.\n\nE.g.: for duration of something in minutes: `2 minutes` but `1 minute`; the `minute` goes here"
  },
  {
    "path": [
      "units",
      "applicableUnits",
      "alternativeDenomination"
    ],
    "required": false,
    "hints": {},
    "type": "array",
    "description": "A list of alternative values which can occur in the OSM database - used for parsing.\nE.g.: while 'm' is canonical, `meter`, `mtrs`, ... can occur as well"
  },
  {
    "path": [
      "units",
      "applicableUnits",
      "human"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "The value for humans in the dropdown. This should not use abbreviations and should be translated, e.g.\n{\n    \"en\": \"meter\",\n    \"fr\": \"metre\"\n}"
  },
  {
    "path": [
      "units",
      "applicableUnits",
      "humanSingular"
    ],
    "required": false,
    "hints": {},
    "type": [
      {
        "$ref": "#/definitions/Record<string,string>"
      },
      {
        "type": "string"
      }
    ],
    "description": "The value for humans in the dropdown. This should not use abbreviations and should be translated, e.g.\n{\n    \"en\": \"minute\",\n    \"nl\": \"minuut\"\n}"
  },
  {
    "path": [
      "units",
      "applicableUnits",
      "prefix"
    ],
    "required": false,
    "hints": {},
    "type": "boolean",
    "description": "If set, then the canonical value will be prefixed instead, e.g. for '€'\nNote that if all values use 'prefix', the dropdown might move to before the text field"
  },
  {
    "path": [
      "units",
      "defaultInput"
    ],
    "required": false,
    "hints": {},
    "type": "string",
    "description": "In some cases, the default denomination is not the most user friendly to input.\nE.g., when measuring kerb heights, it is illogical to ask contributors to input an amount in meters.\n\nWhen a default input method should be used, this can be specified by setting the canonical denomination here, e.g.\n`defaultInput: \"cm\"`. This must be a denomination which appears in the applicableUnits"
  },
  {
    "path": [
      "syncSelection"
    ],
    "required": false,
    "hints": {
      "group": "advanced"
    },
    "type": "string",
    "description": "If set, synchronizes whether or not this layer is enabled.\n\nno: Do not sync at all, always revert to default\nlocal: keep selection on local storage\ntheme-only: sync via OSM, but this layer will only be toggled in this theme\nglobal: all layers with this ID will be synced accross all themes\n"
  },
  {
    "path": [
      "#"
    ],
    "required": false,
    "hints": {
      "group": "special"
    },
    "type": "string",
    "description": "Used for comments and/or to disable some checks\n\nno-question-hint-check: disables a check in MiscTagRenderingChecks which complains about 'div', 'span' or 'class=subtle'-HTML elements in the tagRendering\n"
  },
  {
    "path": [
      "popupInFloatover"
    ],
    "required": false,
    "hints": {
      "group": "advanced"
    },
    "type": "boolean",
    "description": "If set, open the selectedElementView in a floatOver instead of on the right\n"
  },
  {
    "path": [
      "fullNodeDatabase"
    ],
    "required": false,
    "hints": {
      "group": "hidden"
    },
    "type": "boolean",
    "description": "_Set automatically by MapComplete, please ignore_\n"
  }
]