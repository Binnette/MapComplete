[
  {
    "path": [],
    "type": "object",
    "description": "A TagRenderingConfigJson is a single piece of code which converts one ore more tags into a HTML-snippet.\nFor an _editable_ tagRendering, use 'QuestionableTagRenderingConfigJson' instead, which extends this one"
  },
  {
    "path": [
      "id"
    ],
    "type": "string",
    "description": "The id of the tagrendering, should be an unique string.\nUsed to keep the translations in sync. Only used in the tagRenderings-array of a layerConfig, not requered otherwise.\n\nUse 'questions' to trigger the question box of this group (if a group is defined)"
  },
  {
    "path": [
      "group"
    ],
    "type": "string",
    "description": "If 'group' is defined on many tagRenderings, these are grouped together when shown. The questions are grouped together as well.\nThe first tagRendering of a group will always be a sticky element."
  },
  {
    "path": [
      "labels"
    ],
    "type": "array",
    "description": "A list of labels. These are strings that are used for various purposes, e.g. to filter them away"
  },
  {
    "path": [
      "render"
    ],
    "typeHint": "rendered",
    "description": "Renders this value. Note that \"{key}\"-parts are substituted by the corresponding values of the element.\nIf neither 'textFieldQuestion' nor 'mappings' are defined, this text is simply shown as default value.\n\nNote that this is a HTML-interpreted value, so you can add links as e.g. '<a href='{website}'>{website}</a>' or include images such as `This is of type A <br><img src='typeA-icon.svg' />`\ntype: rendered"
  },
  {
    "path": [
      "condition"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndTagConfigJson",
        "description": "Chain many tags, to match, a single of these should be true\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for documentation"
      },
      {
        "$ref": "#/definitions/OrTagConfigJson",
        "description": "Chain many tags, to match, all of these should be true\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for documentation"
      },
      {
        "type": "string"
      }
    ],
    "description": "Only show this tagrendering (or question) if the object also matches the following tags.\n\nThis is useful to ask a follow-up question. E.g. if there is a diaper table, then ask a follow-up question on diaper tables..."
  },
  {
    "path": [
      "condition"
    ],
    "type": "object",
    "description": "Chain many tags, to match, a single of these should be true\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for documentation"
  },
  {
    "path": [
      "condition",
      "and"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndTagConfigJson"
      },
      {
        "description": "Chain many tags, to match, all of these should be true\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for documentation",
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation"
  },
  {
    "path": [
      "condition",
      "and"
    ],
    "type": "object",
    "description": "Chain many tags, to match, all of these should be true\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for documentation"
  },
  {
    "path": [
      "condition"
    ],
    "type": "object",
    "description": "Chain many tags, to match, all of these should be true\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for documentation"
  },
  {
    "path": [
      "condition",
      "or"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndTagConfigJson"
      },
      {
        "description": "Chain many tags, to match, all of these should be true\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for documentation",
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation"
  },
  {
    "path": [
      "condition",
      "or"
    ],
    "type": "object",
    "description": "Chain many tags, to match, a single of these should be true\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for documentation"
  },
  {
    "path": [
      "condition",
      "or"
    ],
    "type": "object",
    "description": "Chain many tags, to match, all of these should be true\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for documentation"
  },
  {
    "path": [
      "freeform"
    ],
    "type": "object",
    "description": "Allow freeform text input from the user"
  },
  {
    "path": [
      "freeform",
      "key"
    ],
    "type": "string",
    "description": "If this key is present, then 'render' is used to display the value.\nIf this is undefined, the rendering is _always_ shown"
  },
  {
    "path": [
      "mappings"
    ],
    "type": "array",
    "description": "Allows fixed-tag inputs, shown either as radiobuttons or as checkboxes"
  },
  {
    "path": [
      "mappings",
      "if"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndTagConfigJson"
      },
      {
        "description": "Chain many tags, to match, all of these should be true\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for documentation",
        "type": "object",
        "properties": {
          "or": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TagConfigJson"
            }
          }
        },
        "required": [
          "or"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "The main representation of Tags.\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for more documentation"
  },
  {
    "path": [
      "mappings",
      "if"
    ],
    "type": "object",
    "description": "Chain many tags, to match, a single of these should be true\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for documentation"
  },
  {
    "path": [
      "mappings",
      "if"
    ],
    "type": "object",
    "description": "Chain many tags, to match, all of these should be true\nSee https://github.com/pietervdvn/MapComplete/blob/develop/Docs/Tags_format.md for documentation"
  },
  {
    "path": [
      "mappings",
      "then"
    ],
    "typeHint": "rendered",
    "description": "If the condition `if` is met, the text `then` will be rendered.\nIf not known yet, the user will be presented with `then` as an option\nType: rendered"
  },
  {
    "path": [
      "mappings",
      "icon"
    ],
    "typeHint": "icon",
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "class",
          "path"
        ]
      },
      {
        "type": "string"
      }
    ],
    "description": "An icon supporting this mapping; typically shown pretty small\nType: icon"
  },
  {
    "path": [
      "mappings",
      "icon",
      "path"
    ],
    "typeHint": "icon",
    "type": "string",
    "description": "The path to the icon\nType: icon"
  },
  {
    "path": [
      "mappings",
      "icon",
      "class"
    ],
    "type": "string",
    "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)"
  }
]